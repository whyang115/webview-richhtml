{"version":3,"sources":["App.jsx","index.js"],"names":["AppWrap","styled","div","token","EditorDemo","props","randomStr","Math","random","toString","slice","uploadFile","file","error","progress","success","reader","FileReader","readAsDataURL","addEventListener","data","result","get","type","split","key","Base64","encode","url","axios","post","headers","Authorization","state","onUploadProgress","loaded","total","then","catch","err","handleEditorChange","editorState","setState","window","richTextHtml","toHTML","BraftEditor","createEditorState","preview","getTokenAndHtml","base64","html","decode","switchPreview","str","$editor","document","querySelector","$control","style","paddingBottom","offsetHeight","this","className","cx","dangerouslySetInnerHTML","__html","media","accepts","video","audio","image","externals","embed","uploadFn","controls","title","text","value","onChange","onSave","submitContent","React","Component","sendContent","webkit","messageHandlers","Save","postMessage","Android","ReactDOM","render","getElementById"],"mappings":"0uBAYA,IAAMA,EAAUC,IAAOC,IAAV,KAsBPC,EACJ,6iBAEmBC,E,YACnB,WAAYC,GAAQ,IAAD,uBACjB,4CAAMA,KA4BRC,UAAY,kBACVC,KAAKC,SACFC,SAAS,IACTC,MAAM,IAhCQ,EAkCnBC,WAAa,YAAyC,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAC/BC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,iBAAiB,QAAQ,SAAAC,GAC9B,IAAMC,EAASC,cAAIF,EAAM,CAAC,SAAU,WAC9BG,EAAOX,EAAKW,KAAKC,MAAM,KAAK,GAC5BC,EAAMC,SAAOC,OAAP,iBAAwB,EAAKrB,YAA7B,YAA4CiB,IAClDK,EAAG,kDAA8CH,GACvDI,IACGC,KAAKF,EAAKP,EAAOG,MAAM,KAAK,GAAI,CAC/BO,QAAS,CACP,eAAgB,2BAChBC,cAAc,WAAD,OAAa,EAAKC,MAAM9B,OAASA,IAEhD+B,iBAAkB,SAASd,GACzBN,GAAYA,EAAUM,EAAKe,OAASf,EAAKgB,MAAS,QAGrDC,MAAK,YAAe,IAAD,KAAXjB,MACsB,IAArBK,IACFG,EAAG,uCAFS,MACJ,GADI,GAGlBb,EAAQ,CAAEa,WAEXU,OAAM,SAAAC,GACL1B,EAAM0B,UA1DK,EA+DnBC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CAAED,gBAChBE,OAAOC,aAAeH,EAAYI,UAjEjB,OAGjB,EAAKZ,MAAQ,CAEXQ,YAAaK,IAAYC,kBAHd,cAIX5C,MAAO,GACP6C,SAAS,GAEXL,OAAOM,gBAAkB,SAAC9C,EAAO+C,GAC/B,IAAMC,EAAOzB,SAAO0B,OAAOF,GAC3BP,OAAOC,aAAeO,EACtB,EAAKT,SAAS,CACZD,YAAaK,IAAYC,kBAAkBI,GAC3ChD,WAGJwC,OAAOU,cAAgB,SAAAC,GACrB,EAAKZ,SAAS,CAAEM,QAAiB,SAARM,KAlBV,E,iFAsBjB,IAAMC,EAAUC,SAASC,cAAc,qBACjCC,EAAWF,SAASC,cAAc,kBACpCF,GAAWG,IACbH,EAAQI,MAAMC,cAAgBF,EAASG,aAAe,GAAK,Q,+BA4C7D,IADO,EAgB0BC,KAAK7B,MAA9BQ,EAhBD,EAgBCA,YAAaO,EAhBd,EAgBcA,QACrB,OACE,kBAAChD,EAAD,CAAS+D,UAAWC,IAAG,MAAO,YAC3BhB,EACC,yBAAKe,UAAU,eACb,yBACEA,UAAU,iBACVE,wBAAyB,CAAEC,OAAQzB,EAAYI,aAInD,kBAAC,IAAD,CACEkB,UAAU,kBACVI,MAAO,CACLC,QAAS,CAAEC,OAAO,EAAOC,OAAO,EAAOC,OAAO,GAC9CC,UAAW,CACTH,OAAO,EACPC,OAAO,EACPC,OAAO,EACPE,OAAO,GAETC,SAAUZ,KAAKnD,YAEjBgE,SAtCS,CACf,WACA,aACA,OACA,SACA,YACA,iBACA,YACA,UACA,UACA,CAAElD,IAAK,QAASmD,MAAO,2BAAQC,KAAM,4BACrC,YACA,OACA,QA0BMC,MAAOrC,EACPsC,SAAUjB,KAAKtB,mBACfwC,OAAQlB,KAAKmB,qB,GA/GeC,IAAMC,WC/B9CxC,OAAOyC,YAAc,WACf9D,cAAIqB,OAAQ,CAAC,SAAU,kBAAmB,OAAQ,gBACpDA,OAAO0C,OAAOC,gBAAgBC,KAAKC,YAAY,CAC7CrC,KAAMR,OAAOC,eAGfD,OAAO8C,QAAQF,KAAK5C,OAAOC,eAI/B8C,IAASC,OAAO,kBAAC,EAAD,MAASnC,SAASoC,eAAe,U","file":"static/js/main.1d60b067.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nimport styled from \"styled-components\";\nimport { get } from \"lodash\";\nimport cx from \"classnames\";\n// 引入编辑器组件\nimport BraftEditor from \"braft-editor\";\n// 引入编辑器样式\nimport \"braft-editor/dist/index.css\";\nimport \"./App.css\";\n\nconst AppWrap = styled.div`\n  height: 100%;\n  border: 1px solid #eee;\n  .previewWrap {\n    overflow: auto;\n    height: 100%;\n    img {\n      width: 100%;\n    }\n  }\n  .previewContent {\n    padding: 20px 0;\n  }\n  .braftEditorWrap {\n    overflow: hidden;\n    box-sizing: border-box;\n  }\n  .bf-content {\n    height: 100%;\n  }\n`;\n\nconst token =\n  \"QCLMePM7TGMVvirxL32Y9696IlLrdz4OsGRlRoWB:1IzZc2hY-HwEv8RmqBC0wdIu2EU=:eyJzY29wZSI6Im1kcGljIiwicmV0dXJuQm9keSI6IntcImtleVwiOlwiJChrZXkpXCIsXCJldGFnXCI6XCIkKGV0YWcpXCIsXCJidWNrZXRcIjpcIiQoYnVja2V0KVwiLFwiZnNpemVcIjpcIiQoZnNpemUpXCIsXCJzZXJ2ZXJOYW1lXCI6XCIkKHg6c2VydmVyTmFtZSlcIixcImZpbGVQYXRoXCI6XCIkKHg6ZmlsZVBhdGgpXCIsXCJmaWxlTmFtZVwiOlwiJCh4OmZpbGVOYW1lKVwiLFwib3JpZ2luYWxGaWxlTmFtZVwiOlwiJCh4Om9yaWdpbmFsRmlsZU5hbWUpXCIsXCJmaWxlRXh0XCI6XCIkKHg6ZmlsZUV4dClcIn0iLCJkZWFkbGluZSI6MTU3MzQwMTU5OSwiaW5zZXJ0T25seSI6MCwiZGV0ZWN0TWltZSI6MCwiZnNpemVMaW1pdCI6MH0=\";\n\nexport default class EditorDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    const html = \"<p>123</p>\";\n    this.state = {\n      // 创建一个空的editorState作为初始值\n      editorState: BraftEditor.createEditorState(html),\n      token: \"\",\n      preview: false\n    };\n    window.getTokenAndHtml = (token, base64) => {\n      const html = Base64.decode(base64);\n      window.richTextHtml = html;\n      this.setState({\n        editorState: BraftEditor.createEditorState(html),\n        token\n      });\n    };\n    window.switchPreview = str => {\n      this.setState({ preview: str === \"true\" ? true : false });\n    };\n  }\n  componentDidMount() {\n    const $editor = document.querySelector(\".braftEditorWrap \");\n    const $control = document.querySelector(\".bf-controlbar\");\n    if ($editor && $control) {\n      $editor.style.paddingBottom = $control.offsetHeight + 10 + \"px\";\n    }\n  }\n\n  randomStr = () =>\n    Math.random()\n      .toString(16)\n      .slice(2);\n\n  uploadFile = ({ file, error, progress, success }) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.addEventListener(\"load\", data => {\n      const result = get(data, [\"target\", \"result\"]);\n      const type = file.type.split(\"/\")[1];\n      const key = Base64.encode(`upload/${this.randomStr()}.${type}`);\n      const url = `https://upload.qiniup.com/putb64/-1/key/${key}`;\n      axios\n        .post(url, result.split(\",\")[1], {\n          headers: {\n            \"Content-Type\": \"application/octet-stream\",\n            Authorization: `UpToken ${this.state.token || token}`\n          },\n          onUploadProgress: function(data) {\n            progress && progress((data.loaded / data.total) * 100);\n          }\n        })\n        .then(({ data }) => {\n          const { key = \"\" } = data || {};\n          const url = `https://pic.mingdao.com/${key}`;\n          success({ url });\n        })\n        .catch(err => {\n          error(err);\n        });\n    });\n  };\n\n  handleEditorChange = editorState => {\n    this.setState({ editorState });\n    window.richTextHtml = editorState.toHTML();\n  };\n\n  render() {\n    const controls = [\n      \"headings\",\n      \"text-color\",\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike-through\",\n      \"separator\",\n      \"list-ul\",\n      \"list-ol\",\n      { key: \"media\", title: \"添加图片\", text: \"添加图片\" },\n      \"separator\",\n      \"undo\",\n      \"redo\"\n    ];\n    const { editorState, preview } = this.state;\n    return (\n      <AppWrap className={cx(\"App\", \"preview\")}>\n        {preview ? (\n          <div className=\"previewWrap\">\n            <div\n              className=\"previewContent\"\n              dangerouslySetInnerHTML={{ __html: editorState.toHTML() }}\n            ></div>\n          </div>\n        ) : (\n          <BraftEditor\n            className=\"braftEditorWrap\"\n            media={{\n              accepts: { video: false, audio: false, image: true },\n              externals: {\n                video: false,\n                audio: false,\n                image: true,\n                embed: false\n              },\n              uploadFn: this.uploadFile\n            }}\n            controls={controls}\n            value={editorState}\n            onChange={this.handleEditorChange}\n            onSave={this.submitContent}\n          />\n        )}\n      </AppWrap>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { get } from \"lodash\";\n\nwindow.sendContent = () => {\n  if (get(window, [\"webkit\", \"messageHandlers\", \"Save\", \"postMessage\"])) {\n    window.webkit.messageHandlers.Save.postMessage({\n      html: window.richTextHtml\n    });\n  } else {\n    window.Android.Save(window.richTextHtml);\n  }\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}