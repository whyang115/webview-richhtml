{"version":3,"sources":["App.jsx","index.js"],"names":["AppWrap","styled","div","TOKEN","EditorDemo","props","computeBottomPadding","$editor","document","querySelector","$control","style","paddingBottom","offsetHeight","randomStr","Math","random","toString","slice","uploadFile","file","error","progress","success","state","uploadServer","token","key","reader","FileReader","readAsDataURL","addEventListener","data","result","get","type","split","defaultKey","Base64","encode","wholeUrl","axios","post","headers","Authorization","onUploadProgress","loaded","total","then","previewServer","url","catch","err","handleEditorChange","editorState","setState","window","richTextHtml","toHTML","BraftEditor","createEditorState","preview","getPara","para","JSON","parse","decode","html","rest","switchPreview","str","this","className","cx","dangerouslySetInnerHTML","__html","media","accepts","video","audio","image","externals","embed","uploadFn","controls","title","text","value","onChange","onSave","submitContent","React","Component","sendContent","webkit","messageHandlers","Save","postMessage","Android","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.53ad8f16.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Base64 } from \"js-base64\";\nimport styled from \"styled-components\";\nimport { get } from \"lodash\";\nimport cx from \"classnames\";\n// 引入编辑器组件\nimport BraftEditor from \"braft-editor\";\n// 引入编辑器样式\nimport \"braft-editor/dist/index.css\";\nimport \"./App.css\";\n\nconst AppWrap = styled.div`\n  height: 100%;\n  .previewWrap {\n    overflow: auto;\n    height: 100%;\n    img {\n      width: 100%;\n    }\n    p {\n      margin: 0;\n    }\n  }\n  .previewContent {\n    padding: 15px;\n  }\n  .braftEditorWrap {\n    overflow: hidden;\n    box-sizing: border-box;\n  }\n  .bf-content {\n    height: 100%;\n  }\n`;\n\nconst TOKEN =\n  \"QCLMePM7TGMVvirxL32Y9696IlLrdz4OsGRlRoWB:mia__LDQq3pz6TTVVV-R8AWZoUg=:eyJzY29wZSI6Im1kcGljIiwicmV0dXJuQm9keSI6IntcImtleVwiOlwiJChrZXkpXCIsXCJldGFnXCI6XCIkKGV0YWcpXCIsXCJidWNrZXRcIjpcIiQoYnVja2V0KVwiLFwiZnNpemVcIjpcIiQoZnNpemUpXCIsXCJzZXJ2ZXJOYW1lXCI6XCIkKHg6c2VydmVyTmFtZSlcIixcImZpbGVQYXRoXCI6XCIkKHg6ZmlsZVBhdGgpXCIsXCJmaWxlTmFtZVwiOlwiJCh4OmZpbGVOYW1lKVwiLFwib3JpZ2luYWxGaWxlTmFtZVwiOlwiJCh4Om9yaWdpbmFsRmlsZU5hbWUpXCIsXCJmaWxlRXh0XCI6XCIkKHg6ZmlsZUV4dClcIn0iLCJkZWFkbGluZSI6MTU3NDE3OTE5OSwiaW5zZXJ0T25seSI6MCwiZGV0ZWN0TWltZSI6MCwiZnNpemVMaW1pdCI6MH0=\";\n\nexport default class EditorDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // 创建一个空的editorState作为初始值\n      editorState: BraftEditor.createEditorState(null),\n      token: \"\",\n      uploadServer: \"https://upload.qiniup.com/putb64/-1/key/upload/\",\n      previewServer:\"https://pic.mingdao.com/\",\n      key: \"\",\n      preview: true,\n    };\n    window.getPara = (para) => {\n      const {html,...rest} =JSON.parse( Base64.decode(para))\n      window.richTextHtml = html;\n      this.setState({\n        editorState: BraftEditor.createEditorState(html),\n       ...rest \n      });\n    };\n    window.switchPreview = (str) => {\n      this.setState({ preview: str === \"true\" ? true : false });\n      if (str === \"false\") {\n        this.computeBottomPadding();\n      }\n    };\n  }\n  componentDidMount() {\n    if (!this.state.preview) {\n      this.computeBottomPadding();\n    }\n  }\n\n  computeBottomPadding = () => {\n    const $editor = document.querySelector(\".braftEditorWrap \");\n    const $control = document.querySelector(\".bf-controlbar\");\n    if ($editor && $control) {\n      $editor.style.paddingBottom = $control.offsetHeight + 10 + \"px\";\n    }\n  };\n  randomStr = () => Math.random().toString(16).slice(2);\n\n  uploadFile = ({ file, error, progress, success }) => {\n    const { uploadServer, token, key } = this.state;\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.addEventListener(\"load\", (data) => {\n      const result = get(data, [\"target\", \"result\"]);\n      const type = file.type.split(\"/\")[1];\n      const defaultKey = Base64.encode(`${this.randomStr()}.${type}`);\n      const wholeUrl = `${uploadServer}${key || defaultKey}`;\n      axios\n        .post(wholeUrl, result.split(\",\")[1], {\n          headers: {\n            \"Content-Type\": \"application/octet-stream\",\n            Authorization: `UpToken ${token || TOKEN}`,\n          },\n          onUploadProgress: function (data) {\n            progress && progress((data.loaded / data.total) * 100);\n          },\n        })\n        .then(({ data }) => {\n          const {previewServer} = this.props\n          const { key = \"\" } = data || {};\n          const url = `${previewServer}${key}`;\n          success({ url });\n        })\n        .catch((err) => {\n          error(err);\n        });\n    });\n  };\n  // computeContentHeight = () => {\n  //   const $wrap = document.querySelector(\".bf-content\");\n  //   const $content = document.querySelector(\"[data-contents='true']\");\n  //   if (!$wrap || !$content) return;\n  //   if ($wrap.offsetHeight < $content.offsetHeight) {\n  //     $wrap.style.height = `${$content.offsetHeight}px`;\n  //   }\n  // };\n\n  handleEditorChange = (editorState) => {\n    this.setState({ editorState });\n    window.richTextHtml = editorState.toHTML();\n  };\n\n  render() {\n    const controls = [\n      \"headings\",\n      \"text-color\",\n      \"bold\",\n      \"italic\",\n      \"underline\",\n      \"strike-through\",\n      \"separator\",\n      \"list-ul\",\n      \"list-ol\",\n      { key: \"media\", title: \"添加图片\", text: \"添加图片\" },\n      \"separator\",\n      \"undo\",\n      \"redo\",\n    ];\n    const { editorState, preview } = this.state;\n    return (\n      <AppWrap className={cx(\"App\", \"preview\")}>\n        {preview ? (\n          <div className=\"previewWrap\">\n            <div\n              className=\"previewContent\"\n              dangerouslySetInnerHTML={{ __html: editorState.toHTML() }}\n            ></div>\n          </div>\n        ) : (\n          <BraftEditor\n            className=\"braftEditorWrap\"\n            media={{\n              accepts: { video: false, audio: false, image: true },\n              externals: {\n                video: false,\n                audio: false,\n                image: true,\n                embed: false,\n              },\n              uploadFn: this.uploadFile,\n            }}\n            controls={controls}\n            value={editorState}\n            onChange={this.handleEditorChange}\n            onSave={this.submitContent}\n          />\n        )}\n      </AppWrap>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { get } from \"lodash\";\n\nwindow.sendContent = () => {\n  if (get(window, [\"webkit\", \"messageHandlers\", \"Save\", \"postMessage\"])) {\n    window.webkit.messageHandlers.Save.postMessage({\n      html: window.richTextHtml\n    });\n  } else {\n    window.Android.Save(window.richTextHtml);\n  }\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}